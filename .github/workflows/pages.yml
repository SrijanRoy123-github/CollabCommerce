name: Build & Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Detect project root (handles nested CollabCommerce/)
        id: detect
        shell: bash
        run: |
          set -e
          # Find the folder that contains an 'apps' dir
          ROOT_DIR="$(dirname "$(find . -type d -name apps -print -quit)")"
          if [ -z "$ROOT_DIR" ] || [ "$ROOT_DIR" = "." ] && [ ! -d "./apps" ]; then
            # try common nested name
            if [ -d "./CollabCommerce/apps" ]; then ROOT_DIR="./CollabCommerce"; fi
          fi
          if [ -z "$ROOT_DIR" ] || [ ! -d "$ROOT_DIR/apps" ]; then
            echo "❌ Could not find an 'apps' folder anywhere."; exit 1
          fi

          # Detect public folder under the same root
          if [ -d "$ROOT_DIR/public" ]; then PUBLIC_DIR="$ROOT_DIR/public";
          elif [ -d "$ROOT_DIR/Public" ]; then PUBLIC_DIR="$ROOT_DIR/Public";
          else echo "❌ Could not find 'public' under $ROOT_DIR"; exit 1; fi

          echo "ROOT_DIR=$ROOT_DIR" >> $GITHUB_ENV
          echo "APPS_ROOT=$ROOT_DIR/apps" >> $GITHUB_ENV
          echo "PUBLIC_ROOT=$PUBLIC_DIR" >> $GITHUB_ENV
          echo "Using ROOT_DIR=$ROOT_DIR"

      - name: Install React deps
        working-directory: ${{ env.APPS_ROOT }}/shopfront-react
        run: npm install --no-audit --no-fund --legacy-peer-deps

      - name: Install Angular deps
        working-directory: ${{ env.APPS_ROOT }}/opsconsole-angular
        run: npm install --no-audit --no-fund --legacy-peer-deps

      - name: Install Vue deps
        working-directory: ${{ env.APPS_ROOT }}/community-vue
        run: npm install --no-audit --no-fund --legacy-peer-deps

      - name: Build React (Shopfront)
        working-directory: ${{ env.APPS_ROOT }}/shopfront-react
        run: npm run build

      - name: Build Angular (OpsConsole)
        working-directory: ${{ env.APPS_ROOT }}/opsconsole-angular
        run: npm run build

      - name: Build Vue (Community)
        working-directory: ${{ env.APPS_ROOT }}/community-vue
        run: npm run build

      - name: Assemble static site
        shell: bash
        run: |
          set -e
          mkdir -p _site/shop _site/console _site/community _site/data

          # React
          cp -r "${APPS_ROOT}/shopfront-react/dist/"* _site/shop/

          # Angular (detect index.html location)
          ANG_DIST="${APPS_ROOT}/opsconsole-angular/dist"
          if [ -f "$ANG_DIST/index.html" ]; then SRC="$ANG_DIST";
          else SRC=$(find "$ANG_DIST" -name index.html -print -quit | xargs dirname); fi
          if [ -z "$SRC" ]; then echo "Angular build not found"; exit 1; fi
          cp -r "$SRC/"* _site/console/

          # Vue
          cp -r "${APPS_ROOT}/community-vue/dist/"* _site/community/

          # Mock data + landing
          cp -r "${PUBLIC_ROOT}/data" _site/data

          cat > _site/index.html <<'HTML'
          <!doctype html>
          <html><head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1">
          <title>CollabCommerce</title>
          <style>body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;margin:40px} a{display:block;margin:12px 0;font-size:18px}</style>
          </head><body>
          <h1>CollabCommerce Cloud — Pages Demo</h1>
          <p>Pick a module:</p>
          <a href="./shop/">🛍️ Shopfront (React + Tailwind)</a>
          <a href="./console/">🛠️ OpsConsole (Angular + Bootstrap)</a>
          <a href="./community/">💬 Community Hub (Vue + Vuex + Router)</a>
          <p>Mock data: <a href="./data/products.json">products.json</a>, <a href="./data/inventory.json">inventory.json</a>, <a href="./data/posts.json">posts.json</a></p>
          </body></html>
          HTML

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

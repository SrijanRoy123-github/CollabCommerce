name: Build & Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Install deps (use legacy-peer-deps to avoid peer conflicts)
      - name: Install React deps
        working-directory: apps/shopfront-react
        run: npm install --no-audit --no-fund --legacy-peer-deps

      - name: Install Angular deps
        working-directory: apps/opsconsole-angular
        run: npm install --no-audit --no-fund --legacy-peer-deps

      - name: Install Vue deps
        working-directory: apps/community-vue
        run: npm install --no-audit --no-fund --legacy-peer-deps

      # Build each app with clear working directories
      - name: Build React (Shopfront)
        working-directory: apps/shopfront-react
        run: npm run build

      - name: Build Angular (OpsConsole)
        working-directory: apps/opsconsole-angular
        run: npm run build

      - name: Build Vue (Community)
        working-directory: apps/community-vue
        run: npm run build

      - name: List build outputs (debug)
        run: |
          echo "=== React dist ==="
          ls -la apps/shopfront-react/dist || true
          echo "=== Angular dist (full tree) ==="
          find apps/opsconsole-angular/dist -maxdepth 3 -type d -print || true
          echo "=== Vue dist ==="
          ls -la apps/community-vue/dist || true

      - name: Assemble static site
        shell: bash
        run: |
          set -e
          mkdir -p _site/shop _site/console _site/community _site/data

          # React
          cp -r apps/shopfront-react/dist/* _site/shop/

          # Angular (dist layout can vary; detect index.html)
          ANG_DIST="apps/opsconsole-angular/dist"
          if [ -f "$ANG_DIST/index.html" ]; then
            SRC="$ANG_DIST"
          else
            # find the folder that contains index.html (handles dist/<proj>/browser etc.)
            SRC=$(find "$ANG_DIST" -name index.html -print -quit | xargs dirname)
          fi
          if [ -z "$SRC" ]; then
            echo "Angular build not found"; exit 1
          fi
          cp -r "$SRC"/* _site/console/

          # Vue
          cp -r apps/community-vue/dist/* _site/community/

          # Mock data + landing
          cp -r public/data _site/data

          cat > _site/index.html <<'HTML'
          <!doctype html>
          <html><head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1">
          <title>CollabCommerce</title>
          <style>body{font-family:system-ui,Segoe UI,Roboto,Helvetica,Arial,sans-serif;margin:40px} a{display:block;margin:12px 0;font-size:18px}</style>
          </head><body>
          <h1>CollabCommerce Cloud ‚Äî Pages Demo</h1>
          <p>Pick a module:</p>
          <a href="./shop/">üõçÔ∏è Shopfront (React + Tailwind)</a>
          <a href="./console/">üõ†Ô∏è OpsConsole (Angular + Bootstrap)</a>
          <a href="./community/">üí¨ Community Hub (Vue + Vuex + Router)</a>
          <p>Mock data: <a href="./data/products.json">products.json</a>, <a href="./data/inventory.json">inventory.json</a>, <a href="./data/posts.json">posts.json</a></p>
          </body></html>
          HTML

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
